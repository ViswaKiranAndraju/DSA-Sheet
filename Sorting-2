import java.util.*;
class Main {
    
    public static void merge(int arr[],int low,int mid,int high){
        int left=low;
        int right=mid+1;
        ArrayList<Integer> ans = new ArrayList<>();
        while(left<=mid && right<=high){
            if(arr[left]<arr[right]){
                ans.add(arr[left]);
                left++;
            }else{
                ans.add(arr[right]);
                right++;
            }
        }
        while(left<=mid){
            ans.add(arr[left]);
            left++;
        }
        while(right<=high){
            ans.add(arr[right]);
            right++;
        }
        for(int i=low;i<=high;i++){
            arr[i]=ans.get(i-low);
        }
    }
    
    public static void mergeSort(int arr[],int low,int high){
        if(low>=high) return;
        int mid = (low+high)/2;
        mergeSort(arr,low,mid);
        mergeSort(arr,mid+1,high);
        merge(arr,low,mid,high);
    }
    
    //Quick Sort

    public static int pivot(int arr[],int low,int high){
        int pivotEle=arr[low];
        int i=low;
        int j=high;
        while(i<j){
            while(arr[i]<=pivotEle && i<=high-1){
                i++;
            }
            while(arr[j]>pivotEle && j>=low+1){
                j--;
            }
            if(i<j){
                int temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
        int temp=arr[low];
        arr[low]=arr[j];
        arr[j]=temp;
        return j;
    }
    
    public static void quickSort(int arr[],int low,int high){
        if(low>=high) return;
        int p=pivot(arr,low,high);
        quickSort(arr,low,p-1);
        quickSort(arr,p+1,high);
    }
    
    public static void main(String[] args) {
        int arr[]={1,9,4,7,2};
        int n=arr.length;
        //mergeSort(arr,0,n-1);
        quickSort(arr,0,n-1);
        for(int ele:arr){
            System.out.print(ele+" ");
        }
    }
}
